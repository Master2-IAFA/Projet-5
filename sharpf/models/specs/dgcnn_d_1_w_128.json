{
  "kind": "DGCNN",
  "encoder_blocks": [
    {
      "kind": "point_block_nlfai",
      "neighbours": {
        "kind": "neighbour_knn",
        "k": 30
      },
      "local_transform": {
        "kind": "local_dynamic_graph"
      },
      "features": {
        "kind": "stacked_conv",
        "channels": [6, 128, 128],
        "blocks": 2
      },
      "aggregation": {
        "kind": "aggregation_max",
        "dim": -1,
        "keepdim": true
      },
      "interpolation": {
        "kind": "interpolation_base"
      }
    }
  ],
  "decoder_blocks": [
    {
      "kind": "point_block_nlfai",
      "in_features": [0],
      "neighbours": {
        "kind": "neighbour_base"
      },
      "local_transform": {
        "kind": "local_base"
      },
      "features": {
        "kind": "stacked_conv",
        "channels": [128, 2048],
        "blocks": 1
      },
      "aggregation": {
        "kind": "aggregation_max_pooling",
        "kernel_size": [2048, 1],
        "repeat_times": 2048
      },
      "interpolation": {
        "kind": "interpolation_base"
      }
    },
    {
      "kind": "point_block_nlfai",
      "in_features": [0],
      "neighbours": {
        "kind": "neighbour_base"
      },
      "local_transform": {
        "kind": "local_base"
      },
      "features": {
        "kind": "stacked_conv",
        "channels": [2176, 1024, 256],
        "blocks": 2,
        "dropout_prob": 0.5
      },
      "aggregation": {
        "kind": "aggregation_base"
      },
      "interpolation": {
        "kind": "interpolation_base"
      }
    },
    {
      "kind": "point_block_nlfai",
      "neighbours": {
        "kind": "neighbour_base"
      },
      "local_transform": {
        "kind": "local_base"
      },
      "features": {
        "kind": "stacked_conv",
        "channels": [256, 1],
        "blocks": 1,
        "bn": false,
        "relu": false
      },
      "aggregation": {
        "kind": "aggregation_base"
      },
      "interpolation": {
        "kind": "interpolation_base"
      }
    }
  ]
}
